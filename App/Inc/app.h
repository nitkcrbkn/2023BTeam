#ifndef __APP_H
#define __APP_H

/*NO Device mode*/
#define _NO_DEVICE 0

int appTask(void);
int appInit(void);

#define DD_NUM_OF_MD 4
#define DD_NUM_OF_AB 0

#define DD_NUM_OF_LD 0
#define DD_NUM_OF_SS 0
#define DD_USE_ENCODER1 0
#define DD_USE_ENCODER2 0
#define DD_NUM_OF_SV 0

#define DD_USE_RC 1

#define MD0MAG 1
#define MD2MAG 1
#define WISE_MAG 0.4
#define SUSPENSION_MAG 1.5

#include "DD_RC.h"
#include "DD_LD.h"
#include "DD_MD.h"
#include "DD_SV.h"
#include "DD_SS.h"

/*
#define _GO_TOGLE_GPIOID GPIOAID
#define _GO_TOGLE_GPIOPIN GPIO_PIN_0
#define _GO_TOGLE() ((MW_GPIORead(_GO_TOGLE_GPIOID,_GO_TOGLE_GPIOPIN)))

#define _FIELD_TOGLE_GPIOID GPIOAID
#define _FIELD_TOGLE_GPIOPIN GPIO_PIN_1
#define _FIELD_TOGLE() ((MW_GPIORead(_FIELD_TOGLE_GPIOID,_FIELD_TOGLE_GPIOPIN)))

#define _ARM_MAX_PHOTO_GPIOID GPIOBID
#define _ARM_MAX_PHOTO_GPIOPIN GPIO_PIN_14
#define _ARM_MAX_PHOTO() ((MW_GPIORead(_ARM_MAX_PHOTO_GPIOID,_ARM_MAX_PHOTO_GPIOPIN)))

#define _ARM_MIN_PHOTO_GPIOID GPIOBID
#define _ARM_MIN_PHOTO_GPIOPIN GPIO_PIN_15
#define _ARM_MIN_PHOTO() ((MW_GPIORead(_ARM_MIN_PHOTO_GPIOID,_ARM_MIN_PHOTO_GPIOPIN)))

#define _HANGER_MAX_PHOTO1_GPIOID GPIOBID
#define _HANGER_MAX_PHOTO1_GPIOPIN GPIO_PIN_13
#define _HANGER_MAX_PHOTO1() ((MW_GPIORead(_HANGER_MAX_PHOTO1_GPIOID,_HANGER_MAX_PHOTO1_GPIOPIN)))

#define _HANGER_MIN_PHOTO1_GPIOID GPIOBID
#define _HANGER_MIN_PHOTO1_GPIOPIN GPIO_PIN_11
#define _HANGER_MIN_PHOTO1() ((MW_GPIORead(_HANGER_MIN_PHOTO1_GPIOID,_HANGER_MIN_PHOTO1_GPIOPIN)))

#define _HANGER_MAX_PHOTO2_GPIOID GPIOBID
#define _HANGER_MAX_PHOTO2_GPIOPIN GPIO_PIN_12
#define _HANGER_MAX_PHOTO2() ((MW_GPIORead(_HANGER_MAX_PHOTO2_GPIOID,_HANGER_MAX_PHOTO2_GPIOPIN)))

#define _HANGER_MIN_PHOTO2_GPIOID GPIOAID
#define _HANGER_MIN_PHOTO2_GPIOPIN GPIO_PIN_10
#define _HANGER_MIN_PHOTO2() ((MW_GPIORead(_HANGER_MIN_PHOTO2_GPIOID,_HANGER_MIN_PHOTO2_GPIOPIN)))
*/
#define MECHA1_MD0 0
#define MECHA1_MD1 1
#define MECHA1_MD2 2
#define MECHA1_MD3 3
#define MECHA1_MD4 4
#define MECHA1_MD5 5
#define MECHA1_MD6 6
#define MECHA1_MD7 7

#define CENTRAL_THRESHOLD 4

#define AB0 (1<<0)
#define AB1 (1<<1)

#define MD_GAIN ( DD_MD_MAX_DUTY / DD_RC_ANALOG_MAX )

/****以下追加分*****************/

typedef enum{
  GET_ENCODER_VALUE = 0,
  RESET_ENCODER_VALUE = 1,
}EncoderOperation_t;

#define TERMINAL 0
#define AUTO 1
#define MANUAL 2
#define NUM_TASK 18

#define X_FIRST_COLLECT_TARGET 200
#define X_SECOND_COLLECT_TARGET 100
#define X_THIRD_COLLECT_TARGET 100
#define X_FOURTH_COLLECT_TARGET 100
#define X_FIFTH_COLLECT_RETURN_TARGET 400
#define X_SIXTH_TSHIRT_TARGET 0
#define X_SEVENTH_TSHIRT_RETURN_TARGET 0 
#define X_EIGHTH_HANGER_TARGET 400
#define X_NINTH_HANGER_TARGET 400

#define PUSH_TABLE 200
#define Y_COLLECT_RETURN_TARGET 500
#define Y_FIRST_TSHIRT_TARGET 100
#define Y_SECOND_TSHIRT_RETURN_TARGET 300
#define Y_THIRD_HANGER_TARGET 200
#define Y_FOURTH_HANGER_TARGET 150
#define Y_HANGER_RETURN_TARGET 350

#define X_FIRST_COLLECT_DUTY 64
#define X_SECOND_COLLECT_DUTY 64
#define X_THIRD_COLLECT_DUTY 64
#define X_FOURTH_COLLECT_DUTY 64
#define X_FIFTH_COLLECT_RETURN_DUTY 64
#define X_SIXTH_TSHIRT_DUTY 64
#define X_SEVENTH_TSHIRT_RETURN_DUTY 64
#define X_EIGHTH_HANGER_DUTY 64
#define X_NINTH_HANGER_DUTY 64

#define PUSH_TABLE_DUTY 30
#define Y_COLLECT_RETURN_DUTY 64
#define Y_FIRST_TSHIRT_DUTY 64
#define Y_SECOND_TSHIRT_RETURN_DUTY 64
#define Y_THIRD_HANGER_DUTY 64
#define Y_FOURTH_HANGER_DUTY 64
#define Y_HANGER_RETURN_DUTY 64

#define COLLECT_DUTY 5000
#define DISCHARGE_TIME 100
#define DISCHARGE_DUTY 5000
#define HANGER_DUTY 5000

#endif


